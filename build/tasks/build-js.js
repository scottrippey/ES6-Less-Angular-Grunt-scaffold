module.exports = function(grunt) {
	grunt.registerTask('build-js', [ 'build-js-generated', 'build-js-combine-compile' ]);
	grunt.registerTask('build-js-generated', [ 'fileindex:GENERATE-MODULE-LISTS' ]);
	grunt.registerTask('build-js-combine-compile', [ 'concat:APP-ES6','babel:APP-ES6' ]);

	grunt.config.merge({
		fileindex: {

			/**
			 * components.js:
			 * Every file within the components folder must belong to a module of the same name.
			 * This task will generate components.js, which imports all modules.
			 */
			'GENERATE-MODULE-LISTS': {
				files: {
					'src/app/components/components.js': [
						'src/app/components/**/*.js',
						'!**/components.js'
					],
					'src/app/pages/pages.js': [
						'src/app/pages/**/*.js',
						'!**/pages.js'
					]
				},
				options: {
					format: function generateAngularModuleFromFiles(list, options, dest) {
						function getFileName(file) {
							return (file.lastIndexOf('/') === -1) ? file : file.substr(file.lastIndexOf('/') + 1);
						}
						return (
							"/* This file was generated by [build-js.js] */\n" +
							"angular.module('"+ getFileName(dest) +"', [\n"
								+ list.map(function(file) {
									return '\t"' + getFileName(file) + '"'
								}).join(',\n')
							+ '\n'
							+ "]);"
						);

					}
				}
			}
		},
		concat: {
			'APP-ES6': {
				src: 'src/app/**/*.js',
				dest: 'dist/js/app.combined.es6.js'
			}
		},
		babel: {
			'APP-ES6': {
				src: 'dist/js/app.combined.es6.js',
				dest: 'dist/js/app.combined.es5.js'
			}
		},
		watch: {
			'APP-ES6': {
				files: [ 'src/app/**/*.js' ],
				tasks: [ 'build-js-combine-compile' ]
			},
			'APP-ES6-livereload': {
				files: [ 'dist/js/**/*.js' ],
				options: { livereload: true }
			}
		}
	});
};
